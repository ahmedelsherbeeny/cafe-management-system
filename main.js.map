{"version":3,"sources":["./src/app/manage-product/manage-product.component.ts","./src/app/manage-product/manage-product.component.html","./src/app/services/categoryservice.service.ts","./src/app/services/open-dialog.service.ts","./src/app/shared/menuItems.ts","./src/app/services/bill-service.service.ts","./src/app/best-seller/best-seller.component.ts","./src/app/best-seller/best-seller.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/material-component/dialog/category/category.component.ts","./src/app/material-component/dialog/category/category.component.html","./src/app/navigation/side-nav/side-nav.component.ts","./src/app/navigation/side-nav/side-nav.component.html","./src/environments/environment.ts","./src/app/shared/global-variable.ts","./src/app/shared/accordion/accordion.directive.ts","./src/app/services/product-service.service.ts","./src/app/cards/cards.component.ts","./src/app/cards/cards.component.html","./src/app/loader/loader-interceptor.service.ts","./src/app/manage-order/manage-order.component.ts","./src/app/manage-order/manage-order.component.html","./src/app/view-bill/view-bill.component.ts","./src/app/view-bill/view-bill.component.html","./src/app/shared/accordion/accordionlink.directive.ts","./src/app/product/product.component.ts","./src/app/product/product.component.html","./src/app/material-component/dialog/change-password/change-password.component.ts","./src/app/material-component/dialog/change-password/change-password.component.html","./src/app/shared/accordion/index.ts","./src/app/viewbillproducts/viewbillproducts.component.ts","./src/app/viewbillproducts/viewbillproducts.component.html","./src/app/layouts/full/sidebar/sidebar.component.ts","./src/app/shared/shared.module.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/manage-category/manage-category.component.ts","./src/app/manage-category/manage-category.component.html","./src/app/layouts/full/full.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/material-component/dialog/confirmation/confirmation.component.ts","./src/app/material-component/dialog/confirmation/confirmation.component.html","./src/app/services/auth-service.service.ts","./src/app/services/handle-req.interceptor.ts","./src/app/forgot-password/forgot-password.component.ts","./src/app/forgot-password/forgot-password.component.html","./src/app/app.module.ts","./src/app/services/auth-token.interceptor.ts","./src/app/loader/loader-service.service.ts","./src/app/services/router-guard.service.ts","./src/app/manage-users/manage-users.component.ts","./src/app/manage-users/manage-users.component.html","./src/app/try-one/try-one.component.ts","./src/app/try-one/try-one.component.html","./src/app/services/opensnackbar.service.ts","./src/app/shared/material-module.ts","./src/app/navigation/footer/footer.component.ts","./src/app/navigation/footer/footer.component.html","./src/app/services/user.service.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/services/dashboard-service.service.ts","./src/app/navigation/header/header.component.ts","./src/app/navigation/header/header.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/shared/accordion/accordionanchor.directive.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { CategoryComponent } from '../material-component/dialog/category/category.component';\nimport { ConfirmationComponent } from '../material-component/dialog/confirmation/confirmation.component';\nimport { ProductComponent } from '../product/product.component';\nimport { OpensnackbarService } from '../services/opensnackbar.service';\nimport { ProductServiceService } from '../services/product-service.service';\n\n@Component({\n  selector: 'app-manage-product',\n  templateUrl: './manage-product.component.html',\n  styleUrls: ['./manage-product.component.scss']\n})\nexport class ManageProductComponent implements OnInit {\n\n  dataSource: any\n  responseMessage: any\n  displayedColumns: string[] = ['name', 'description', 'price', 'categoryName', 'edit']\n  constructor(private prodser: ProductServiceService, private router: Router, private dialog: MatDialog,\n    private snackbar: OpensnackbarService) { }\n\n\n  ngOnInit(): void {\n    this.tableData()\n\n  }\n  tableData() {\n    this.prodser.getProducts().subscribe((res: any) => {\n      this.dataSource = new MatTableDataSource(res)\n    })\n\n  }\n  applyFilter(event: Event) {\n    let filteredVal = (event.target as HTMLInputElement).value\n    this.dataSource.filter = filteredVal.trim().toLocaleLowerCase()\n  }\n  handleAddAction() {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.data = {\n      action: 'Add'\n    }\n    dialogConfig.width = '850px'\n    let dialogref = this.dialog.open(ProductComponent, dialogConfig)\n    this.router.events.subscribe((res: any) => {\n      dialogref.close()\n    })\n    let sub = dialogref.componentInstance.onAddEmitter.subscribe((res: any) => {\n      this.tableData()\n\n    })\n\n\n  }\n  handleEditAction(values: any) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.data = {\n      action: 'Edit',\n      data: values\n    }\n    dialogConfig.width = '850px'\n    let dialogref = this.dialog.open(ProductComponent, dialogConfig)\n    this.router.events.subscribe((res: any) => {\n      dialogref.close()\n    })\n    let sub = dialogref.componentInstance.onEditEmitter.subscribe((res: any) => {\n      this.tableData()\n\n    })\n\n  }\n  handleDeleteAction(values: any) {\n    const dilogconfig = new MatDialogConfig()\n    dilogconfig.data = {\n      message: 'delete ' + values.name + ' product'\n    }\n    const dialogref = this.dialog.open(ConfirmationComponent, dilogconfig)\n    const sub = dialogref.componentInstance.onEmmitStatus.subscribe((res: any) => {\n      this.deleteProduct(values.id)\n      dialogref.close()\n\n\n\n    })\n\n  }\n  deleteProduct(id: any) {\n    this.prodser.delete(id).subscribe((res: any) => {\n\n      this.tableData()\n      this.responseMessage = res?.message\n      this.snackbar.openSnackBar(this.responseMessage, 'success')\n\n    })\n  }\n  onChange(status: any, id: any) {\n    var data = {\n      status: status.toString(),\n      id: id\n    }\n    this.prodser.updateStatus(data).subscribe((res: any) => {\n      this.responseMessage = res?.message\n      this.snackbar.openSnackBar(this.responseMessage, 'success')\n    })\n\n  }\n\n\n}\n","<mat-card>\n          <b> <span> Manage Products</span> </b> \n            <button color=\"primary\"  mat-flat-button (click)=\"handleAddAction()\" class=\"float-right\">Add Product</button>\n            \n</mat-card>\n<hr>\n<mat-card>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Filter\n        </mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\">\n       \n\n    </mat-form-field>\n\n</mat-card>\n<hr>\n<div class=\"responsive-table\"> \n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Name</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n    \n        </ng-container>\n        <ng-container matColumnDef=\"description\">\n            <th mat-header-cell *matHeaderCellDef>Description</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.description}}</td>\n    \n        </ng-container>\n        <ng-container matColumnDef=\"price\">\n            <th mat-header-cell *matHeaderCellDef>Price</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.price}}</td>\n    \n        </ng-container>\n        <ng-container matColumnDef=\"categoryName\">\n            <th mat-header-cell *matHeaderCellDef>category</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.categoryName}}</td>\n    \n        </ng-container>\n        <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef class=\"action-lonk\">Action</th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-icon-button color=\"primary\" (click)=\"handleEditAction(element)\" matTooltip=\"edit\">\n                    <mat-icon>edit</mat-icon>\n                </button>\n                <button mat-icon-button color=\"primary\"  (click)=\"handleDeleteAction(element)\" matTooltip=\"delete\">\n                    <mat-icon>delete</mat-icon>\n                </button>\n                <mat-slide-toggle (change)=\"onChange($event.checked,element.id)\" [checked]=\"element.status\" matTooltip=\"Activate or Deactivate Product\">\n    \n                </mat-slide-toggle>\n            </td>\n    \n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns:displayedColumns\"></tr>\n    </table>\n</div>\n\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryserviceService {\n url=environment.apiUrl;\n  constructor(private http:HttpClient) { }\n\n  getCategories(){\n   return this.http.get(this.url+'/category/get')\n  }\n  addCategory(data:any){\n    return this.http.post(this.url+'/category/add',data)\n  }\n  updateCategory(data:any){\n     return this.http.patch(this.url+'/category/update',data)\n  }\n}\n","import { Component, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OpenDialogService {\n\n  constructor(private dialog:MatDialog) { }\n  openComponent(width:string,component:any){\n    const dialogConfig=new MatDialogConfig();\n\n    dialogConfig.width=width\n    this.dialog.open(component,dialogConfig)\n\n  }\n}\n","import { Injectable } from \"@angular/core\"\r\n\r\nexport interface menu{\r\n    state:string,\r\n    name:string,\r\n    icon:string,\r\n    role:string\r\n}\r\nconst MENUITEMS=[\r\n    {state:'cards',name:'Dashboard',icon:'dashboard',role:''},\r\n    {state:'category',name:'Manage Category',icon:'category',role:'admin'},\r\n    {state:'product',name:'Manage Product',icon:'inventory_2',role:'admin'},\r\n    {state:'order',name:'Manage Order',icon:'list_alt',role:''},\r\n    {state:'bill',name:'View Bill',icon:'import_contacts',role:'admin'},\r\n    {state:'users',name:'View Users',icon:'people',role:'admin'},\r\n\r\n\r\n    \r\n\r\n]\r\n@Injectable()\r\nexport class menuitems{\r\n    getMenuItem():menu[]{\r\n        return MENUITEMS\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BillServiceService {\n  url=environment.apiUrl\n\n  constructor(private http:HttpClient) { }\n  generateReport(data:any){\n    return this.http.post(this.url+'/bill/generateReport',data)\n  }\n  getPdf(data:any):Observable<Blob>{\n    return this.http.post(this.url+'/bill/getPdf',data,{responseType:'blob'});\n  }\n  getBills(){\n    return this.http.get(this.url+'/bill/getBills')\n  }\n  deleteBill(id:any){\n    return this.http.delete(this.url+'/bill/deleteBill/'+id)\n\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-best-seller',\r\n  templateUrl: './best-seller.component.html',\r\n  styleUrls: ['./best-seller.component.scss']\r\n})\r\nexport class BestSellerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n\r\n     <h1 style=\"text-align: center ; font-size: 50px;margin: 10px;\">Best Seller</h1>\r\n\r\n<div class=\"container\" fxLayout=\"row\" fxLayout.sm=\"column\" fxLayout.xs=\"column\"\r\n     fxLayoutGap=\"10px\" fxLayoutGap.xs=\"5px\">\r\n     \r\n    <div fxFlex=\"40\">\r\n        <mat-card>\r\n            <mat-card-header style=\"justify-content: center;\">\r\n                <mat-card-title>\r\n                    <h1>Pizza</h1>\r\n                </mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <img mat-card-image src=\"../../assets/img/1.jpg\" alt=\"...\" />\r\n                <p class=\"text-muted\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae\r\n                     cumque doloremque tempora at delectus repudiandae, provident debitis, \r\n                    tempore maiores odit nobis laborum facere obcaecati eaque ab ad modi mollitia nostrum.</p>\r\n            </mat-card-content>\r\n\r\n\r\n        </mat-card>\r\n    </div>\r\n    <div fxFlex=\"40\">\r\n        <mat-card>\r\n            <mat-card-header style=\"justify-content: center;\">\r\n                <mat-card-title>\r\n                    <h1>Biriani</h1>\r\n                </mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <img mat-card-image src=\"../../assets/img/2.jpg\" alt=\"...\" />\r\n                <p class=\"text-muted\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Unde hic architecto veritatis\r\n                     sint cum dolorem, provident qui \r\n                    animi mollitia voluptates aliquam nam reprehenderit velit modi odio fugiat nulla, maiores aliquid.</p>\r\n            </mat-card-content>\r\n\r\n\r\n        </mat-card>\r\n    </div>\r\n    <div fxFlex=\"40\">\r\n        <mat-card>\r\n            <mat-card-header style=\"justify-content: center;\">\r\n                <mat-card-title>\r\n                    <h1>Pasta</h1>\r\n                </mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <img mat-card-image src=\"../../assets/img/3.jpg\" alt=\"...\" />\r\n                <p class=\"text-muted\">Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                     Eum unde impedit reiciendis incidunt animi tempore est, \r\n                    molestiae nihil fugit nam beatae quasi quidem suscipit obcaecati ea exercitationem possimus. Soluta, laboriosam.</p>\r\n            </mat-card-content>\r\n\r\n\r\n        </mat-card>\r\n    </div>\r\n    <div fxFlex=\"40\">\r\n        <mat-card>\r\n            <mat-card-header style=\"justify-content: center;\">\r\n                <mat-card-title >\r\n                    <h1 >Molton Cake</h1>\r\n                </mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <img mat-card-image src=\"../../assets/img/4.jpg\" alt=\"...\" />\r\n                <p class=\"text-muted\">Lorem ipsum dolor sit amet consectetur, adipisicing elit. \r\n                    Itaque quibusdam possimus nam porro repudiandae eveniet omnis ipsa explicabo, \r\n                    maiores saepe ipsum rem, ex reiciendis minus illum atque vero est exercitationem.</p>\r\n            </mat-card-content>\r\n\r\n\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!--\r\n    <div class=\"container\">\r\n    <div class=\"box-timeline\">\r\n        <div class=\"ligne\"></div>\r\n\r\n<div fxLayout=\" column \">\r\n    <div class=\"rond r1\">\r\n        <img class=\"rounded-circle img-fluid\" src=\"../../assets/img/1.jpg\"\r\n                        alt=\"...\" />\r\n\r\n    </div>\r\n    <div class=\"rond r2\">\r\n        <img class=\"rounded-circle \" src=\"../../assets/img/2.jpg\"\r\n                        alt=\"...\" />\r\n\r\n    </div>\r\n    <div class=\"rond r3\">\r\n        <img class=\"rounded-circle img-fluid\" src=\"../../assets/img/3.jpg\"\r\n                        alt=\"...\" />\r\n    </div>\r\n    <div class=\"rond r4\">\r\n        <img class=\"rounded-circle img-fluid\" src=\"../../assets/img/4.jpg\"\r\n                        alt=\"...\" />\r\n    </div>\r\n\r\n    <div class=\"box b1\">\r\n        <h2>Pizza</h2>\r\n        <p class=\"text-muted\">Pizza is an Italian dish consisting of a usually round, flattened base of\r\n            leavened wheat-based dough topped with tomatoes, cheese, and often various other\r\n            ingredients, which is then baked at a high temperature, traditionally in a wood-fired oven.\r\n            A small pizza is sometimes called a pizzetta.</p>\r\n    </div>\r\n    <div class=\"box b2\" fxLayoutAlign.gt-xs=\"start\">\r\n        <h2>Biriani</h2>\r\n        <p class=\"text-muted\">Biryani is a mixed rice dish. It is made with Indian spices, rice, and\r\n            meat usually that of chicken, fish, and sometimes, in addition, eggs or vegetables such as\r\n            potatoes in certain regional varieties.</p>\r\n\r\n\r\n    </div>\r\n    <div class=\"box b3\">\r\n        <h2>Pasta</h2>\r\n        <p class=\"text-muted\">Biryani is a mixed rice dish. It is made with Indian spices, rice, and\r\n            meat usually that of chicken, fish, and sometimes, in addition, eggs or vegetables such as\r\n            potatoes in certain regional varieties.</p>\r\n    </div>\r\n    <div class=\"box b4\">\r\n        <h2>Molton Cake</h2>\r\n        <p class=\"text-muted\">Molten chocolate cake is a popular dessert that combines the elements of a\r\n            chocolate cake and a soufflé. Its name derives from the dessert's liquid chocolate center,\r\n            and it is also known as chocolate moelleux, chocolate lava cake, or simply lava cake.</p>\r\n    </div>\r\n\r\n</div>\r\n        \r\n    </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n<section class=\"page-section\" id=\"about\">\r\n    <div class=\"container\">\r\n        <div class=\"text-center\">\r\n            <h2 class=\"section-heading text-uppercase\">Best Seller</h2>\r\n        </div>\r\n        <ul class=\"timeline\">\r\n            <li><a href=\"../../assets/img/1.jpg\" target=\"_blank\">\r\n                    <div class=\"timeline-image\"><img class=\"rounded-circle img-fluid\" src=\"../../assets/img/1.jpg\"\r\n                            alt=\"...\" /></div>\r\n                </a>\r\n                <div class=\"timeline-panel\">\r\n                    <div class=\"timeline-heading\">\r\n                        <h4>Pizza</h4>\r\n                    </div>\r\n                    <div class=\"timeline-body\">\r\n                        <p class=\"text-muted\">Pizza is an Italian dish consisting of a usually round, flattened base of\r\n                            leavened wheat-based dough topped with tomatoes, cheese, and often various other\r\n                            ingredients, which is then baked at a high temperature, traditionally in a wood-fired oven.\r\n                            A small pizza is sometimes called a pizzetta.</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li class=\"timeline-inverted\">\r\n                <a href=\"../../assets/img/2.jpg\" target=\"_blank\">\r\n                    <div class=\"timeline-image\"><img class=\"rounded-circle img-fluid\" src=\"../../assets/img/2.jpg\"\r\n                            alt=\"...\" /></div>\r\n                </a>\r\n                <div class=\"timeline-panel\">\r\n                    <div class=\"timeline-heading\">\r\n                        <h4>Biryani</h4>\r\n                    </div>\r\n                    <div class=\"timeline-body\">\r\n                        <p class=\"text-muted\">Biryani is a mixed rice dish. It is made with Indian spices, rice, and\r\n                            meat usually that of chicken, fish, and sometimes, in addition, eggs or vegetables such as\r\n                            potatoes in certain regional varieties.</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li>\r\n                <a href=\"../../assets/img/3.jpg\" target=\"_blank\">\r\n                    <div class=\"timeline-image\"><img class=\"rounded-circle img-fluid\" src=\"../../assets/img/3.jpg\"\r\n                            alt=\"...\" /></div>\r\n                </a>\r\n                <div class=\"timeline-panel\">\r\n                    <div class=\"timeline-heading\">\r\n                        <h4>Pasta</h4>\r\n                    </div>\r\n                    <div class=\"timeline-body\">\r\n                       <p class=\"text-muted\">Biryani is a mixed rice dish. It is made with Indian spices, rice, and\r\n                            meat usually that of chicken, fish, and sometimes, in addition, eggs or vegetables such as\r\n                            potatoes in certain regional varieties.</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li class=\"timeline-inverted\">\r\n                <a href=\"../../assets/img/4.jpg\" target=\"_blank\">\r\n                    <div class=\"timeline-image\"><img class=\"rounded-circle img-fluid\" src=\"../../assets/img/4.jpg\"\r\n                            alt=\"...\" /></div>\r\n                </a>\r\n                <div class=\"timeline-panel\">\r\n                    <div class=\"timeline-heading\">\r\n                        <h4>Molten chocolate cake</h4>\r\n                    </div>\r\n                    <div class=\"timeline-body\">\r\n                        <p class=\"text-muted\">Molten chocolate cake is a popular dessert that combines the elements of a\r\n                            chocolate cake and a soufflé. Its name derives from the dessert's liquid chocolate center,\r\n                            and it is also known as chocolate moelleux, chocolate lava cake, or simply lava cake.</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li class=\"timeline-inverted\">\r\n                <div class=\"timeline-image\">\r\n                    <h4>\r\n                        Be Part\r\n                        <br />\r\n                        Of Our\r\n                        <br />\r\n                        Cafe!\r\n                    </h4>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</section>\r\n-->","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MediaChange, MediaObserver } from '@angular/flex-layout';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { ForgotPasswordComponent } from '../forgot-password/forgot-password.component';\r\nimport { LoaderServiceService } from '../loader/loader-service.service';\r\nimport { DashboardServiceService } from '../services/dashboard-service.service';\r\nimport { UserService } from '../services/user.service';\r\nimport { SignupComponent } from '../signup/signup.component';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit,OnDestroy {\r\n  mediasub!:Subscription\r\n\r\n  constructor(private dialog:MatDialog,public loader:LoaderServiceService,\r\n    private http:HttpClient,private router:Router,\r\n    private mediaObserver:MediaObserver,private user:UserService,private dashser:DashboardServiceService) { }\r\n \r\n  loading$=this.loader.loading$\r\n  data:any\r\n\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n   \r\n    if(localStorage.getItem('token')!= null){\r\n      this.user.checkToken().subscribe((response:any)=>{\r\n        this.router.navigate(['/cafe/dashboard'])\r\n\r\n      },(error:any)=>{\r\n        console.log(error)\r\n      });\r\n      \r\n    }\r\n    this.mediasub=this.mediaObserver.media$.subscribe((result:MediaChange)=>{\r\n      console.log(result.mqAlias)\r\n\r\n    })\r\n   \r\n\r\n    \r\n  }\r\n  ngOnDestroy(): void {\r\n    this.mediasub.unsubscribe()\r\n  }\r\n  \r\n  \r\n  \r\n \r\n\r\n}\r\n","\r\n<app-header></app-header>\r\n\r\n\r\n\r\n<div class=\"container\" fxLayout=\"column\" >\r\n  \r\n    <img src=\"assets\\img\\food1.jpg\" class=\"banner\">\r\n    \r\n\r\n\r\n\r\n\r\n\r\n</div>\r\n<app-best-seller></app-best-seller>\r\n<app-footer></app-footer>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!--\r\n<div class=\"wrapper sticky\">\r\n  <nav class=\"navbar-fixed-top\">\r\n    <a href=\"#\" class=\"logo\">\r\n      <mat-icon>storefront</mat-icon> Cafe Management System\r\n    </a>\r\n    <ul>\r\n    </ul>\r\n  </nav>\r\n  <div class=\"bg-image\"></div>\r\n<app-best-seller></app-best-seller>\r\n</div>\r\n<div class=\"footer\" id=\"signup\">\r\n  <h2>All right reserved @BTech Days</h2>\r\n</div>\r\n-->","import { Component, EventEmitter, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ManageCategoryComponent } from 'src/app/manage-category/manage-category.component';\nimport { CategoryserviceService } from 'src/app/services/categoryservice.service';\nimport { OpensnackbarService } from 'src/app/services/opensnackbar.service';\nimport { ConfirmationComponent } from '../confirmation/confirmation.component';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.scss']\n})\nexport class CategoryComponent implements OnInit {\ncategoryForm:any=FormGroup\ndialogAction:any\naction:string=\"Add\"\nresponseMessage:any\nonAddEmiter=new EventEmitter()\nonEditEmiter=new EventEmitter()\n  constructor(@Inject(MAT_DIALOG_DATA) public dialogData:any,\n  private fb:FormBuilder,private catser:CategoryserviceService,\n  private dialgref:MatDialogRef<CategoryComponent>,private snackbar:OpensnackbarService) { }\n\n  ngOnInit(): void {\n    this.categoryForm=this.fb.group({\n      name:[null,[Validators.required]]\n    })\n\n    if(this.dialogData.action === 'Edit'){\n      this.dialogAction=\"Edit\";\n      this.action=\"Update\"\n      this.categoryForm.patchValue(this.dialogData.data)\n\n    }\n\n  }\n\n  handleSubmit(){\n    if(this.dialogAction === \"Edit\"){\n      this.Edit()\n\n    }\n    else{\n      this.Add()\n\n    }\n  }\n\n  Add(){\n    var formData=this.categoryForm.value\n    var data={\n      name:formData.name\n    }\n    this.catser.addCategory(data).subscribe((res:any)=>{\n      this.dialgref.close()\n      this.onAddEmiter.emit()\n      this.responseMessage=res?.message\n      this.snackbar.openSnackBar(this.responseMessage,'success')\n\n\n    })\n\n\n  }\n\n  Edit(){\n    var formData=this.categoryForm.value\n    var data={\n      id:this.dialogData.data.id,\n      name:formData.name\n    }\n    this.catser.updateCategory(data).subscribe((res:any)=>{\n      this.dialgref.close()\n      this.onEditEmiter.emit()\n      this.responseMessage=res?.message\n      this.snackbar.openSnackBar(this.responseMessage,'success')\n\n\n    })\n\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row fxLayout=\"row\">\n        <span class=\"title-center\">{{dialogData.action}} Category</span>\n\n\n    </mat-toolbar-row>\n</mat-toolbar>\n<mat-dialog-content class=\"typograghy\">\n    <form [formGroup]=\"categoryForm\">\n        <div fxFlex fxLayout=\"column\">\n           \n            <mat-form-field appearance=\"fill\" fxFlex>\n                <mat-label>Name</mat-label>\n                <input matInput formControlName=\"name\" required>\n                <mat-error *ngIf=\"categoryForm.controls.name.touched && categoryForm.controls.name.invalid \">\n                    <span *ngIf=\"categoryForm.controls.name.errors?.required\">This field is required.</span>\n\n                </mat-error>\n\n            </mat-form-field>\n            \n           \n            \n\n        </div>\n        \n    </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"center\">\n    <button mat-raised-button color=\"primary\" (click)=\"handleSubmit()\" [disabled]=\"!(categoryForm.valid && categoryForm.dirty ) \">{{action}}</button>\n    <button mat-raised-button color=\"primary\"  mat-dialog-close>Close</button>\n\n</mat-dialog-actions>\n","import { Component, OnInit } from '@angular/core';\nimport { menuitems } from 'src/app/shared/menuItems';\nimport jwt_decode from 'jwt-decode';\n\n\n@Component({\n  selector: 'app-side-nav',\n  templateUrl: './side-nav.component.html',\n  styleUrls: ['./side-nav.component.scss']\n})\nexport class SideNavComponent implements OnInit {\ntoken:any=localStorage.getItem('token')\ntokenPayload:any\n  constructor(public menuitems:menuitems) {\n    this.tokenPayload=jwt_decode(this.token)\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-nav-list *ngFor=\"let menuitem of menuitems.getMenuItem()\">\n    <a mat-list-item [routerLink]=\"['/cafe/dashboard',menuitem.state]\" *ngIf=\"(menuitem.role ==='' || menuitem.role===tokenPayload.role)\"\n     routerLinkActive=\"list-item-active\">\n        <mat-icon>{{menuitem.icon}}</mat-icon> {{menuitem.name}}\n    </a>\n   \n\n</mat-nav-list>","export const environment = {\r\n  production: false,\r\n  apiUrl:\"https://cafe-proj.herokuapp.com/\"\r\n};","export class globalVariables {\r\n    //generic error\r\n    public static genericError: string = \"somthing went wrong please try again later!\"\r\n    //regex\r\n    public static nameRegex: string = \"[a-zA-Z0-9 ]*\"\r\n\r\n    public static emailRegex: string = \"[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}\"\r\n\r\n    public static contactNumberRegex: string = \"^[e0-9]{10,10}$\"\r\n    public static unauthorized:string=\" you are not authorized to access this page !\"\r\n     public static productExistError:string=\"product already exists !\"\r\n     public static productAdded:string=\"product added successfully\"\r\n\r\n    //variable\r\n    public static error:string=\"error\"\r\n\r\n}\r\n\r\n","import {\r\n  Directive,\r\n  OnInit,\r\n  AfterViewInit,\r\n  AfterContentChecked\r\n} from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[appAccordion]'\r\n})\r\nexport class AccordionDirective implements AfterContentChecked {\r\n  protected navlinks: Array<AccordionLinkDirective> = [];\r\n\r\n  closeOtherLinks(selectedLink: AccordionLinkDirective): void {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link !== selectedLink) {\r\n        link.selected = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  addLink(link: AccordionLinkDirective): void {\r\n    this.navlinks.push(link);\r\n  }\r\n\r\n  removeGroup(link: AccordionLinkDirective): void {\r\n    const index = this.navlinks.indexOf(link);\r\n    if (index !== -1) {\r\n      this.navlinks.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  checkOpenLinks() {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link.group) {\r\n        const routeUrl = this.router.url;\r\n        const currentUrl = routeUrl.split('/');\r\n        if (currentUrl.indexOf(link.group) > 0) {\r\n          link.selected = true;\r\n          this.closeOtherLinks(link);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .subscribe(e => this.checkOpenLinks());\r\n  }\r\n\r\n  constructor(private router: Router) {\r\n    setTimeout(() => this.checkOpenLinks());\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductServiceService {\nurl=environment.apiUrl\n  constructor(private http:HttpClient) { }\n  getProducts(){\n    return this.http.get(this.url+'/product/get')\n  }\n  delete(id:any){\n    return this.http.delete(this.url+'/product/delete/'+id)\n  }\n  updateStatus(data:any){\n    return this.http.patch(this.url+'/product/updateStatus',data)\n  }\n  add(data:any){\n    return this.http.post(this.url+'/product/add',data)\n\n  }\n  update(data:any){\n    return this.http.patch(this.url+'/product/update',data)\n  }\n  getProductsByCategoryID(id:any){\n    return this.http.get(this.url+'/product/getByCategory/'+id)\n  }\n  getProductByID(id:any){\n    return this.http.get(this.url+'/product/getByProduct/'+id)\n  }\n  \n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { DashboardServiceService } from '../services/dashboard-service.service';\n\n@Component({\n  selector: 'app-cards',\n  templateUrl: './cards.component.html',\n  styleUrls: ['./cards.component.scss']\n})\nexport class CardsComponent implements OnInit {\n\n  data:any\n\n\n\tconstructor(private dashser:DashboardServiceService) {\n\t\t\n\t}\n\tngOnInit(): void {\n\t\tthis.getTheDetails()\n  \t}\n\n\tgetTheDetails(){\n\t\tthis.dashser.getDetails().subscribe((response:any)=>{\n\t\t\tthis.data=response\n\n\t\t})\n\t}\n\n}\n","<mat-card >\n    <mat-card-header style=\"border-radius: 5px; background-color: red;margin-bottom: 5px;\">\n        <mat-card-title>\n           <h2>Dashboard</h2>\n        </mat-card-title>\n    </mat-card-header>\n\n    <mat-card-content fxLayout=\"row\" fxLayoutGap=\"5px\" fxLayout.xs=\"column\">\n\n        <mat-card fxFlex fxLayout=\"column\" class=\"inner-card\" >\n            <mat-card-header style=\"justify-content: center;\" fxFlex>\n\n            <mat-card-title  >\n                <h2>Total Category:</h2>\n\n\n             </mat-card-title>\n            </mat-card-header >\n\n             <mat-card-content fxFlex>\n                 <h1 class=\"text-center\">{{data?.category}}</h1>\n            </mat-card-content>\n\n            <mat-card-actions fxLayout=\"row\" fxFlex >\n                <button mat-button style=\"background-color: red; margin-bottom: 3px;\" fxFlex [routerLink]=\"['/cafe/dashboard/category']\" >View Category</button>\n    \n    \n            </mat-card-actions>\n            \n        </mat-card>\n        <mat-card fxFlex fxLayout=\"column\" class=\"inner-card\">\n            <mat-card-header style=\"justify-content: center;\" fxFlex >\n\n            <mat-card-title>\n                <h2>Total Products:</h2>\n\n\n             </mat-card-title>\n            </mat-card-header>\n\n             <mat-card-content fxFlex>\n                 <h1 class=\"text-center\">{{data?.product}}</h1>\n            </mat-card-content>\n            <mat-card-actions fxLayout=\"row\" class=\"actions\" fxFlex>\n                <button mat-button style=\"background-color: red; margin-bottom: 3px;\" fxFlex [routerLink]=\"['/cafe/dashboard/product']\" >View Product</button>\n    \n    \n            </mat-card-actions>\n            \n        </mat-card>\n        <mat-card fxFlex fxLayout=\"column\" class=\"inner-card\">\n            <mat-card-header style=\"justify-content: center;\" fxFlex >\n\n            <mat-card-title>\n                <h2>Total Bill Cost:</h2>\n\n\n             </mat-card-title>\n            </mat-card-header>\n\n             <mat-card-content fxFlex>\n                 <h1 class=\"text-center\">2</h1>\n            </mat-card-content>\n            <mat-card-actions fxLayout=\"row\" class=\"actions\" fxFlex>\n                <button mat-button style=\"background-color: red; margin-bottom: 3px;\" fxFlex [routerLink]=\"['/cafe/dashboard/bill']\" >View Bill</button>\n    \n    \n            </mat-card-actions>\n            \n        </mat-card>\n    </mat-card-content>\n\n\n\n    \n\n\n</mat-card>","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LoaderServiceService } from './loader-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderInterceptorService implements HttpInterceptor {\n  \n\n  constructor(public loader:LoaderServiceService) { }\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    this.loader.show();\n\n\n    return next.handle(request).pipe(\n      finalize(()=>{\n        setTimeout(() => {\n          this.loader.hide()\n        }, 3000);\n\n      })\n    )\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { saveAs } from 'file-saver';\nimport { LoaderServiceService } from '../loader/loader-service.service';\nimport { BillServiceService } from '../services/bill-service.service';\nimport { CategoryserviceService } from '../services/categoryservice.service';\nimport { OpensnackbarService } from '../services/opensnackbar.service';\nimport { ProductServiceService } from '../services/product-service.service';\nimport { globalVariables } from '../shared/global-variable';\n\n@Component({\n  selector: 'app-manage-order',\n  templateUrl: './manage-order.component.html',\n  styleUrls: ['./manage-order.component.scss']\n})\nexport class ManageOrderComponent implements OnInit {\n  displayedColumns: any[] = ['name', 'category', 'price', 'quantity', 'total', 'edit']\n  dataSource: any = []\n  manageOrderForm!: FormGroup\n  categories: any[] = []\n  products: any[] = []\n  price: any\n  totalAmount: any=0\n  responseMessage: any\n\n  constructor(private fb: FormBuilder, private catser: CategoryserviceService,\n    private billser: BillServiceService,\n    private snackbar: OpensnackbarService,\n    private prodser: ProductServiceService, private loader: LoaderServiceService) { }\n\n  ngOnInit(): void {\n   \n    this.getCategories()\n    this.manageOrderForm = this.fb.group({\n      name: [null, [Validators.required, Validators.pattern(globalVariables.nameRegex)]],\n      email: [null, [Validators.required, Validators.pattern(globalVariables.emailRegex)]],\n      contactNumber: [null, [Validators.required, Validators.pattern(globalVariables.contactNumberRegex)]],\n      paymentMethod: [null, [Validators.required]],\n      category: [null, [Validators.required]],\n      product: [null, [Validators.required]],\n      price: [ , [Validators.required]],\n      quantity: [null, [Validators.required]],\n      total: [0 , [Validators.required]]\n\n    })\n  }\n  getCategories() {\n    this.catser.getCategories().subscribe((res: any) => {\n      this.categories = res\n    })\n\n  }\n  getProductsByCategoryID(value: any) {\n    this.prodser.getProductsByCategoryID(value.id).subscribe((res: any) => {\n      this.loader.hide()\n\n      this.products = res\n      console.log(res)\n      this.manageOrderForm.controls['quantity'].setValue('')\n      this.manageOrderForm.controls['total'].setValue(0)\n\n    })\n  }\n  getProductDetails(value: any) {\n    this.prodser.getProductByID(value.id).subscribe((res: any) => {\n      this.loader.hide()\n      this.price = res[0].price\n\n\n\n\n\n      this.manageOrderForm.controls['price'].setValue(res[0].price)\n      this.manageOrderForm.controls['quantity'].setValue('1')\n      this.manageOrderForm.controls['total'].setValue(this.price * 1)\n\n\n\n\n\n    })\n  }\n  setQuantity() {\n    var temp = this.manageOrderForm.controls['quantity'].value\n    if (temp > 0) {\n      this.manageOrderForm.controls['total'].setValue(this.manageOrderForm.controls['quantity'].value *\n        this.manageOrderForm.controls['price'].value)\n    }\n    else if (temp != '') {\n      this.manageOrderForm.controls['quantity'].setValue('1')\n      this.manageOrderForm.controls['total'].setValue(this.manageOrderForm.controls['quantity'].value *\n        this.manageOrderForm.controls['price'].value)\n\n\n\n\n    }\n    \n  }\n  \n  validateProductAdd() {\n    if (this.manageOrderForm.controls['total'].value === 0 ||\n      this.manageOrderForm.controls['total'].value === null ||\n      this.manageOrderForm.controls['quantity'].value <= 0)\n\n      return true\n\n    else\n\n      return false\n\n  }\n  \n  validateSubmit() {\n    if (this.totalAmount === 0 || this.manageOrderForm.controls['name'].value === null ||\n      this.manageOrderForm.controls['email'].value === null || this.manageOrderForm.controls['contactNumber'].value === null ||\n      this.manageOrderForm.controls['paymentMethod'].value === null || !(this.manageOrderForm.controls['contactNumber'].valid) ||\n      !(this.manageOrderForm.controls['email'].valid))\n      return true\n\n    else\n\n      return false\n  }\n  \n  add() {\n    var formData = this.manageOrderForm.value\n    var productName = this.dataSource.find((e: { id: number; }) => e.id == formData.product.id)\n    if (productName == undefined) {\n      this.totalAmount=this.totalAmount + formData.total\n      this.dataSource.push({\n        id: formData.product.id,\n        name: formData.product.name,\n        category: formData.category.name,\n        quantity: formData.quantity,\n        price: formData.price,\n        total: formData.total\n\n      })\n      this.dataSource = [...this.dataSource]\n      this.snackbar.openSnackBar(globalVariables.productAdded, 'success')\n      \n\n    }\n    else {\n      this.snackbar.openSnackBar(globalVariables.productExistError, globalVariables.error)\n\n    }\n\n\n\n  }\n  handleDeleteAction(value: any, element: any) {\n    this.totalAmount = this.totalAmount - element.total\n    this.dataSource.splice(value, 1)\n    this.dataSource = [...this.dataSource]\n\n\n  }\n  submitAction() {\n    var formData = this.manageOrderForm.value\n    var data = {\n      name: formData.name,\n      email: formData.email,\n      contactNumber: formData.contactNumber,\n      paymentMethod: formData.paymentMethod,\n      total: this.totalAmount,\n      productDetails: JSON.stringify(this.dataSource)\n    }\n    this.billser.generateReport(data).subscribe((res: any) => {\n      this.downloadFile(res?.uuid)\n      this.manageOrderForm.reset()\n      this.dataSource = []\n      this.totalAmount = 0\n    })\n\n\n  }\n  downloadFile(filename: any) {\n    var data = {\n      uuid: filename\n    }\n    this.billser.getPdf(data).subscribe((res: any) => {\n      saveAs(res,filename+'.pdf')\n    })\n  }\n\n}\n","<mat-card>\n    <b><span>Manage Order</span></b>\n    <button mat-flat-button color=\"primary\" class=\"float-right\" [disabled]=\"validateSubmit()\"   (click)=\"submitAction()\">Submit & get Bill</button>\n\n</mat-card>\n<hr>\n<mat-card>\n    <b> <span>Customer Details</span></b>\n    <form [formGroup]=\"manageOrderForm\">\n        \n            <div fxLayout=\"row wrap\">\n                <mat-form-field appearance=\"fill\" fxFlex>\n                    <mat-label>Name</mat-label>\n                    <input matInput formControlName=\"name\" required>\n                    <mat-error *ngIf=\"manageOrderForm.controls.name.touched && manageOrderForm.controls.name.invalid \">\n                        <span *ngIf=\"manageOrderForm.controls.name.errors?.required\">This field is required.</span>\n                        <span *ngIf=\"manageOrderForm.controls.name.errors?.pattern\">This field is invalid</span>\n    \n                    </mat-error>\n    \n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" fxFlex>\n                    <mat-label>Email</mat-label>\n                    <input matInput formControlName=\"email\" required>\n                    <mat-error *ngIf=\"manageOrderForm.controls.email.touched && manageOrderForm.controls.email.invalid \">\n                        <span *ngIf=\"manageOrderForm.controls.email.errors?.required\">This field is required.</span>\n                        <span *ngIf=\"manageOrderForm.controls.email.errors?.pattern\">This field is invalid</span>\n    \n                    </mat-error>\n    \n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" fxFlex>\n                    <mat-label>contactNumber</mat-label>\n                    <input matInput formControlName=\"contactNumber\" required>\n                    <mat-error *ngIf=\"manageOrderForm.controls.contactNumber.touched && manageOrderForm.controls.contactNumber.invalid \">\n                        <span *ngIf=\"manageOrderForm.controls.contactNumber.errors?.required\">This field is required.</span>\n                        <span *ngIf=\"manageOrderForm.controls.contactNumber.errors?.pattern\">This field is invalid</span>\n    \n                    </mat-error>\n    \n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" fxFlex>\n                    <mat-label>paymentMethod</mat-label>\n                    <mat-select matInput formControlName=\"paymentMethod\" required>\n                        <mat-option value=\"cash\">Cash</mat-option>\n                        <mat-option value=\"credit card\">creditCard</mat-option>\n                        <mat-option value=\"debit card\">debitCard</mat-option>\n\n                    </mat-select>\n                    <mat-error *ngIf=\"manageOrderForm.controls.paymentMethod.touched && manageOrderForm.controls.paymentMethod.invalid \">\n                        <span *ngIf=\"manageOrderForm.controls.paymentMethod.errors?.required\">This field is required.</span>\n    \n                    </mat-error>\n    \n                </mat-form-field>\n                \n            </div>\n        \n\n    </form>\n</mat-card>\n<hr>\n<mat-card>\n<b>Select Product</b>\n\n    <form [formGroup]=\"manageOrderForm\">\n        <div fxLayout=\"row wrap\">\n            <mat-form-field appearance=\"fill\" fxFlex>\n                <mat-label>Category</mat-label>\n                <mat-select matInput formControlName=\"category\" required (selectionChange)=\"getProductsByCategoryID($event.value)\">\n                    <mat-option value=\"cash\" *ngFor=\"let cat of categories\" [value]=\"cat\">{{cat.name}}</mat-option>\n                   \n    \n                </mat-select>\n                <mat-error *ngIf=\"manageOrderForm.controls.category.touched && manageOrderForm.controls.category.invalid \">\n                    <span *ngIf=\"manageOrderForm.controls.category.errors?.required\">This field is required.</span>\n                    <span *ngIf=\"manageOrderForm.controls.category.errors?.pattern\">This field is invalid</span>\n\n                </mat-error>\n                \n               \n    \n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\" fxFlex>\n                <mat-label>Product</mat-label>\n                <mat-select matInput formControlName=\"product\" required (selectionChange)=\"getProductDetails($event.value)\">\n                    <mat-option value=\"cash\" *ngFor=\"let prod of products\" [value]=\"prod\">{{prod.name}}</mat-option>\n                   \n    \n                </mat-select>\n                <mat-error *ngIf=\"manageOrderForm.controls.product.touched && manageOrderForm.controls.product.invalid \">\n                    <span *ngIf=\"manageOrderForm.controls.product.errors?.required\">This field is required.</span>\n                    <span *ngIf=\"manageOrderForm.controls.product.errors?.pattern\">This field is invalid</span>\n\n                </mat-error>\n               \n    \n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\" fxFlex>\n                <mat-label>Price</mat-label>\n                <input matInput formControlName=\"price\"  required readonly >\n                <mat-error *ngIf=\"manageOrderForm.controls.price.touched && manageOrderForm.controls.price.invalid \">\n                    <span *ngIf=\"manageOrderForm.controls.price.errors?.required\">This field is required.</span>\n                    <span *ngIf=\"manageOrderForm.controls.price.errors?.pattern\">This field is invalid</span>\n\n                </mat-error>\n\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\" fxFlex>\n                <mat-label>Quantity</mat-label>\n                <input matInput formControlName=\"quantity\"  required (keyup)=\"setQuantity()\"  >\n                <mat-error *ngIf=\"manageOrderForm.controls.quantity.touched && manageOrderForm.controls.quantity.invalid \">\n                    <span *ngIf=\"manageOrderForm.controls.quantity.errors?.required\">This field is required.</span>\n                    <span *ngIf=\"manageOrderForm.controls.quantity.errors?.pattern\">This field is invalid</span>\n\n                </mat-error>\n\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\" fxFlex>\n                <mat-label>Total</mat-label>\n                <input matInput formControlName=\"total\"  required readonly   >\n                <mat-error *ngIf=\"manageOrderForm.controls.total.touched && manageOrderForm.controls.total.invalid \">\n                    <span *ngIf=\"manageOrderForm.controls.total.errors?.required\">This field is required.</span>\n                    <span *ngIf=\"manageOrderForm.controls.total.errors?.pattern\">This field is invalid</span>\n\n                </mat-error>\n\n            </mat-form-field>\n           \n    \n        </div>\n    </form>\n\n    <button mat-flat-button color=\"primary\" (click)=\"add()\" [disabled]=\"manageOrderForm.invalid\">Add</button>\n    <button mat-flat-button color=\"primary\" class=\"float-right\" >Total Amount: {{totalAmount}}</button>\n\n\n</mat-card>\n<hr>\n<div class=\"responsive-table\"> \n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Name</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n    \n        </ng-container>\n        <ng-container matColumnDef=\"category\">\n            <th mat-header-cell *matHeaderCellDef>Category</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.category}}</td>\n    \n        </ng-container>\n        <ng-container matColumnDef=\"price\">\n            <th mat-header-cell *matHeaderCellDef>Price</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.price}}</td>\n    \n        </ng-container>\n        <ng-container matColumnDef=\"quantity\">\n            <th mat-header-cell *matHeaderCellDef>Category</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.quantity}}</td>\n    \n        </ng-container>\n        <ng-container matColumnDef=\"total\">\n            <th mat-header-cell *matHeaderCellDef>Total</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.total}}</td>\n    \n        </ng-container>\n        <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef class=\"action-lonk\">Action</th>\n            <td mat-cell *matCellDef=\"let element; let i=index\">\n               \n                <button mat-icon-button color=\"primary\" (click)=\"handleDeleteAction(i,element)\"   matTooltip=\"delete\">\n                    <mat-icon>delete</mat-icon>\n                </button>\n               \n            </td>\n    \n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns:displayedColumns\"></tr>\n    </table>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport * as saveAs from 'file-saver';\nimport { ConfirmationComponent } from '../material-component/dialog/confirmation/confirmation.component';\nimport { BillServiceService } from '../services/bill-service.service';\nimport { OpensnackbarService } from '../services/opensnackbar.service';\nimport { ViewbillproductsComponent } from '../viewbillproducts/viewbillproducts.component';\n\n@Component({\n  selector: 'app-view-bill',\n  templateUrl: './view-bill.component.html',\n  styleUrls: ['./view-bill.component.scss']\n})\nexport class ViewBillComponent implements OnInit {\n\n  constructor(private billser: BillServiceService, private dialog: MatDialog, private router: Router, private snakbar: OpensnackbarService) { }\n  displayedColumns: any[] = ['name', 'email', 'contactNumber', 'paymentMethod', 'view']\n  responseMessage: any\n  dataSource: any\n\n  ngOnInit(): void {\n    this.tableData()\n\n  }\n  tableData() {\n    this.billser.getBills().subscribe((res: any) => {\n      this.dataSource = new MatTableDataSource(res)\n\n\n\n    })\n\n  }\n  applyFilter(event: Event) {\n    var filteredValue = (event.target as HTMLInputElement).value\n    this.dataSource.filter = filteredValue.trim().toLocaleLowerCase()\n\n  }\n  handleViewAction(values: any) {\n    const matdialgconfig = new MatDialogConfig()\n    matdialgconfig.data = {\n      data: values\n    }\n    matdialgconfig.width = '100%'\n    const dialoref = this.dialog.open(ViewbillproductsComponent, matdialgconfig)\n    this.router.events.subscribe(() => {\n      dialoref.close()\n    })\n\n\n  }\n  handleDownloadAction(element: any) {\n    var data = {\n      name: element.name,\n      email: element.email,\n      contactNumber: element.contactNumber,\n      paymentMethod: element.paymentMethod,\n      total: element.total,\n      productDetails: element.productDetails\n    }\n\n    this.billser.generateReport(data).subscribe((res: any) => {\n      this.downloadFile(res?.uuid)\n    })\n  }\n\n  handleDeleteAction(element: any) {\n    const dialogconfic = new MatDialogConfig()\n    dialogconfic.data = {\n      message: 'delete ' + element.name + ',s bill'\n    }\n    const dialogref = this.dialog.open(ConfirmationComponent, dialogconfic)\n    const sub = dialogref.componentInstance.onEmmitStatus.subscribe((res: any) => {\n      this.deleteIt(element.id)\n      dialogref.close()\n    })\n\n  }\n  downloadFile(filename: any) {\n    var data = {\n      uuid: filename\n    }\n    this.billser.getPdf(data).subscribe((res: any) => {\n      saveAs(res, filename + '.pdf')\n    })\n\n\n  }\n\n  deleteIt(id: any) {\n    this.billser.deleteBill(id).subscribe((res: any) => {\n      this.responseMessage = res?.message\n      this.tableData()\n      this.snakbar.openSnackBar(this.responseMessage, 'success')\n\n    })\n  }\n\n}\n\n","<mat-card>\n    <b> <span> View Bills</span> </b> \n      \n</mat-card>\n<hr>\n<mat-card>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Filter\n  </mat-label>\n      <input matInput (keyup)=\"applyFilter($event)\">\n \n\n</mat-form-field>\n\n</mat-card>\n<hr>\n<div class=\"responsive-table\"> \n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n\n  </ng-container>\n  <ng-container matColumnDef=\"email\">\n      <th mat-header-cell *matHeaderCellDef>Email</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.email}}</td>\n\n  </ng-container>\n  <ng-container matColumnDef=\"contactNumber\">\n      <th mat-header-cell *matHeaderCellDef>ContactNumber</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.contactNumber}}</td>\n\n  </ng-container>\n  <ng-container matColumnDef=\"paymentMethod\">\n      <th mat-header-cell *matHeaderCellDef>PaymentMethod</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.paymentMethod}}</td>\n\n  </ng-container>\n  <ng-container matColumnDef=\"view\">\n      <th mat-header-cell *matHeaderCellDef class=\"action-lonk\">Action</th>\n      <td mat-cell *matCellDef=\"let element\">\n          <button mat-icon-button color=\"primary\" (click)=\"handleViewAction(element)\" matTooltip=\"view bill\">\n              <mat-icon>visibility</mat-icon>\n          </button>\n          <button mat-icon-button color=\"primary\" (click)=\"handleDownloadAction(element)\" matTooltip=\"view bill\">\n            <mat-icon>summarize</mat-icon>\n        </button>\n\n          <button mat-icon-button color=\"primary\"  (click)=\"handleDeleteAction(element)\" matTooltip=\"delete\">\n              <mat-icon>delete</mat-icon>\n          </button>\n         \n      </td>\n\n  </ng-container>\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns:displayedColumns\"></tr>\n</table>\n</div>","import {\r\n  Directive,\r\n  HostBinding,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { AccordionDirective } from './accordion.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionLink]'\r\n})\r\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\r\n  @Input()\r\n  public group: any;\r\n\r\n  @HostBinding('class.selected')\r\n  @Input()\r\n  get selected(): boolean {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: boolean) {\r\n    this._selected = value;\r\n    if (value) {\r\n      this.nav.closeOtherLinks(this);\r\n    }\r\n  }\r\n\r\n  protected _selected: boolean=false;\r\n  protected nav: AccordionDirective;\r\n\r\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\r\n    this.nav = nav;\r\n  }\r\n\r\n  ngOnInit(): any {\r\n    this.nav.addLink(this);\r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    this.nav.removeGroup(this);\r\n  }\r\n\r\n  toggle(): any {\r\n    this.selected = !this.selected;\r\n  }\r\n}\r\n","import { Component, EventEmitter, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CategoryserviceService } from '../services/categoryservice.service';\nimport { OpensnackbarService } from '../services/opensnackbar.service';\nimport { ProductServiceService } from '../services/product-service.service';\nimport { globalVariables } from '../shared/global-variable';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.scss']\n})\nexport class ProductComponent implements OnInit {\n  onAddEmitter=new EventEmitter()\n  onEditEmitter=new EventEmitter()\n  action:string='Add'\n  dialogAction:string=''\n  responseMessage:any\n  productForm:any=FormGroup\n  categories:any[]=[]\n\n\n  constructor(private prodser:ProductServiceService,private fb:FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public dialogData:any,private catser:CategoryserviceService,\n    private dialogref:MatDialogRef<ProductComponent>,private snackbar:OpensnackbarService) { }\n\n  ngOnInit(): void {\n    this.productForm=this.fb.group({\n      name:[null,[Validators.required,Validators.pattern(globalVariables.nameRegex)]],\n      description:[null,Validators.required],\n      categoryID:[null,[Validators.required]],\n      price:[null,[Validators.required]]\n    })\n    if(this.dialogData.action==='Edit'){\n      this.dialogAction='Edit'\n      this.action='Update'\n      this.productForm.patchValue(this.dialogData.data)\n      \n      \n    }\n    this.getCategories()\n\n   \n  }\n  getCategories(){\n    this.catser.getCategories().subscribe((res:any)=>{\n      this.categories=res\n\n    })\n  }\n  handleSubmit(){\n    if(this.dialogAction==='Edit'){\n      this.Edit()\n    }\n    else{\n      this.Add()\n    }\n  }\n  Add() {\n    var formData=this.productForm.value\n    \n    var data={\n      \n      name:formData.name,\n      description:formData.description,\n      price:formData.price,\n      categoryID:formData.categoryID\n    }\n    this.prodser.add(data).subscribe((res:any)=>{\n      this.dialogref.close()\n      this.onAddEmitter.emit()\n      this.responseMessage=res?.message\n      this.snackbar.openSnackBar(this.responseMessage,'success')\n    })\n  }\n  Edit() {\n    var formData=this.productForm.value\n    \n    var data={\n      id:this.dialogData.data.id,\n      name:formData.name,\n      description:formData.description,\n      price:formData.price,\n      categoryID:formData.categoryID\n    }\n    this.prodser.update(data).subscribe((res:any)=>{\n      this.dialogref.close()\n      this.onEditEmitter.emit()\n      this.responseMessage=res?.message\n      this.snackbar.openSnackBar(this.responseMessage,'success')\n    })\n  }\n\n  \n\n  \n \n\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row fxLayout=\"row\">\n        <span class=\"title-center\">{{dialogData.action}} Product</span>\n\n\n    </mat-toolbar-row>\n</mat-toolbar>\n<mat-dialog-content class=\"typograghy\">\n    <form [formGroup]=\"productForm\">\n        <div fxFlex fxLayout=\"column\">\n           \n            <div fxLayout=\"row wrap\">\n                <mat-form-field appearance=\"fill\" fxFlex>\n                    <mat-label>Name</mat-label>\n                    <input matInput formControlName=\"name\" required>\n                    <mat-error *ngIf=\"productForm.controls.name.touched && productForm.controls.name.invalid \">\n                        <span *ngIf=\"productForm.controls.name.errors?.required\">This field is required.</span>\n    \n                    </mat-error>\n    \n                </mat-form-field>\n\n            </div>\n            \n            <div fxLayout=\"row wrap\">\n                <mat-form-field appearance=\"fill\" fxFlex>\n                    <mat-label>Price</mat-label>\n                    <input matInput formControlName=\"price\" required>\n                    <mat-error *ngIf=\"productForm.controls.price.touched && productForm.controls.price.invalid \">\n                        <span *ngIf=\"productForm.controls.price.errors?.required\">This field is required.</span>\n    \n                    </mat-error>\n    \n                </mat-form-field>\n                <mat-form-field appearance=\"fill\" fxFlex>\n                    <mat-label>Category</mat-label>\n                    <mat-select formControlName=\"categoryID\">\n\n                        <mat-option *ngFor=\"let cat of categories\" [value]=\"cat.id\">{{cat.name}}</mat-option>\n                    </mat-select>\n\n                    \n    \n                </mat-form-field>\n\n\n            </div>\n            <div fxLayout=\"row wrap\">\n                <mat-form-field appearance=\"fill\" fxFlex>\n                    <mat-label>Description</mat-label>\n                    <input matInput formControlName=\"description\" required>\n                    <mat-error *ngIf=\"productForm.controls.description.touched && productForm.controls.description.invalid \">\n                        <span *ngIf=\"productForm.controls.description.errors?.required\">This field is required.</span>\n    \n                    </mat-error>\n    \n                </mat-form-field>\n\n            </div>\n            \n           \n            \n\n        </div>\n        \n    </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"center\">\n    <button mat-raised-button color=\"primary\" (click)=\"handleSubmit()\" [disabled]=\"!(productForm.valid && productForm.dirty ) \">{{action}}</button>\n    <button mat-raised-button color=\"primary\"  mat-dialog-close>Close</button>\n\n</mat-dialog-actions>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { OpensnackbarService } from 'src/app/services/opensnackbar.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n  changePasswordForm: any = FormGroup\n  formData: any\n  responseMessage: any\n  constructor(private fb: FormBuilder, private user: UserService, private snackbar: OpensnackbarService, public dialogref: MatDialogRef<ChangePasswordComponent>) { }\n\n  ngOnInit(): void {\n    this.changePasswordForm = this.fb.group({\n      oldPassword: [null, [Validators.required]],\n      newPassword: [null, [Validators.required]],\n      confirmPassword: [null, [Validators.required]]\n    })\n\n  }\n  handleConfirm() {\n    if (this.changePasswordForm.controls['confirmPassword'].value != this.changePasswordForm.controls['newPassword'].value) {\n      return true;\n    }\n    else {\n      return false\n    }\n  }\n  handleChange() {\n    this.formData = this.changePasswordForm.value\n    var data = {\n      password: this.formData.oldPassword,\n      newPassword: this.formData.newPassword,\n      confirmPassword: this.formData.confirmPassword\n    }\n    this.user.changePassword(data).subscribe((response: any) => {\n      this.responseMessage = response?.message\n      this.dialogref.close()\n      this.snackbar.openSnackBar(this.responseMessage, 'success')\n\n\n\n    })\n\n\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row fxLayout=\"row\">\n        <span class=\"title-center\">Change Password</span>\n\n\n    </mat-toolbar-row>\n</mat-toolbar>\n<mat-dialog-content class=\"typograghy\">\n    <form [formGroup]=\"changePasswordForm\">\n        <div fxFlex fxLayout=\"column\">\n\n       \n        <mat-form-field appearance=\"fill\" fxFlex>\n            <mat-label>Old Password</mat-label>\n            <input matInput formControlName=\"oldPassword\" required>\n            <mat-error *ngIf=\"changePasswordForm.controls.oldPassword.touched && changePasswordForm.controls.oldPassword.invalid \">\n                <span *ngIf=\"changePasswordForm.controls.oldPassword.errors?.required\">This field is required.</span>\n\n            </mat-error>\n\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" fxFlex>\n            <mat-label>New Password</mat-label>\n            <input matInput formControlName=\"newPassword\" required>\n            <mat-error *ngIf=\"changePasswordForm.controls.newPassword.touched && changePasswordForm.controls.newPassword.invalid \">\n                <span *ngIf=\"changePasswordForm.controls.newPassword.errors?.required\">This field is required.</span>\n\n            </mat-error>\n\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" fxFlex>\n            <mat-label>Confirm Password</mat-label>\n            <input matInput formControlName=\"confirmPassword\" required>\n            <mat-error *ngIf=\"changePasswordForm.controls.confirmPassword.touched && changePasswordForm.controls.confirmPassword.invalid \">\n                <span *ngIf=\"changePasswordForm.controls.confirmPassword.errors?.required\">This field is required.</span>\n\n            </mat-error>\n            <mat-hint *ngIf=\"handleConfirm() && !(changePasswordForm.controls.confirmPassword.invalid)\" style=\"color: red;\">\n                <span>New password and confirm password deos not match</span>\n\n            </mat-hint>\n\n        </mat-form-field>\n    </div>\n\n    </form>\n\n\n\n\n</mat-dialog-content>\n<mat-dialog-actions align=\"center\">\n    <button mat-raised-button color=\"primary\" (click)=\"handleChange()\"  [disabled]=\"changePasswordForm.invalid\">Submit</button>\n    <button mat-raised-button color=\"primary\"  mat-dialog-close>Close</button>\n\n</mat-dialog-actions>\n\n","export * from './accordionanchor.directive';\r\nexport * from './accordionlink.directive';\r\nexport * from './accordion.directive';\r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-viewbillproducts',\n  templateUrl: './viewbillproducts.component.html',\n  styleUrls: ['./viewbillproducts.component.scss']\n})\nexport class ViewbillproductsComponent implements OnInit {\n  dataSourceOne:any\n  dataSourceTwo:any\n  data:any[]=[]\n  displayedColumnsOne:any=['name','email','contactNumber','paymentMethod']\n  displayedColumnsTwo:any=['name','category','price','quantity','total']\n\n\n  constructor(@Inject(MAT_DIALOG_DATA) public dialogData:any) { }\n\n  ngOnInit(): void {\n    this.data.push(this.dialogData.data)\n    \n    this.dataSourceOne=new MatTableDataSource(this.data)\n    this.dataSourceTwo=new MatTableDataSource(JSON.parse(this.dialogData.data.productDetails))\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row fxLayout=\"row\">\n        <span class=\"title-center\">Bill</span>\n        <button mat-icon-button mat-dialog-close class=\"float-right\">\n            <mat-icon>cancel</mat-icon>\n        </button>\n\n\n    </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-dialog-content class=\"typogrphy\">\n\n    <div class=\"responsive-table\">\n            <span class=\"title1\">Customer Info</span>\n\n        <table mat-table [dataSource]=\"dataSourceOne\">\n            <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef>Name</th>\n                <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"email\">\n                <th mat-header-cell *matHeaderCellDef>Email</th>\n                <td mat-cell *matCellDef=\"let element\">{{element.email}}</td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"contactNumber\">\n                <th mat-header-cell *matHeaderCellDef>contactNumber</th>\n                <td mat-cell *matCellDef=\"let element\">{{element.contactNumber}}</td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"paymentMethod\">\n                <th mat-header-cell *matHeaderCellDef>paymentMethod</th>\n                <td mat-cell *matCellDef=\"let element\">{{element.paymentMethod}}</td>\n\n            </ng-container>\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsOne\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns:displayedColumnsOne\"></tr>\n            \n        </table>\n    </div>\n\n\n\n    <div class=\"responsive-table\" style=\"margin-top: 5px;\">\n        <span class=\"title1\">Bill Details</span>\n\n        <table mat-table [dataSource]=\"dataSourceTwo\">\n            <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef>Name</th>\n                <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"category\">\n                <th mat-header-cell *matHeaderCellDef>Category</th>\n                <td mat-cell *matCellDef=\"let element\">{{element.category}}</td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"price\">\n                <th mat-header-cell *matHeaderCellDef>Price</th>\n                <td mat-cell *matCellDef=\"let element\">{{element.price}}</td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"quantity\">\n                <th mat-header-cell *matHeaderCellDef>Quantity</th>\n                <td mat-cell *matCellDef=\"let element\">{{element.quantity}}</td>\n\n            </ng-container>\n            <ng-container matColumnDef=\"total\">\n                <th mat-header-cell *matHeaderCellDef>Total</th>\n                <td mat-cell *matCellDef=\"let element\">{{element.total}}</td>\n\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsTwo\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns:displayedColumnsTwo\"></tr>\n\n        </table>\n    </div>\n</mat-dialog-content>","import { ChangeDetectorRef, Component, OnDestroy } from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: []\n})\nexport class AppSidebarComponent implements OnDestroy {\n  mobileQuery: MediaQueryList;\n\n  private _mobileQueryListener: () => void;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher\n  ) {\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n}\n","import { NgModule } from '@angular/core';\r\n\r\nimport { AccordionAnchorDirective, AccordionLinkDirective, AccordionDirective } from './accordion';\r\nimport { menuitems } from './menuItems';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective\r\n  ],\r\n  exports: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective\r\n   ],\r\n  providers: [menuitems ]\r\n})\r\nexport class SharedModule { }\r\n","\r\n            <app-header (toggleSideBar)=\"toggleit()\"></app-header>\r\n            <mat-sidenav-container>\r\n                <mat-sidenav *ngIf=\"!devicexs\" opened  mode=\"side\" #sidenav=\"matSidenav\" class=\"mat-elevation-z8\">\r\n                    <app-side-nav></app-side-nav>\r\n                </mat-sidenav >\r\n                <mat-sidenav *ngIf=\"devicexs\" [opened]=\"isOpen\"  mode=\"over\" #sidenav=\"matSidenav\" class=\"mat-elevation-z8\">\r\n                    <app-side-nav></app-side-nav>\r\n                </mat-sidenav >\r\n                <mat-sidenav-content >\r\n                    <div class=\"content mat-elevation-z8\">\r\n                        <router-outlet></router-outlet>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                </mat-sidenav-content>\r\n            </mat-sidenav-container>\r\n            <app-footer></app-footer>\r\n\r\n\r\n\r\n\r\n\r\n<!--\r\n    <mat-drawer-container>\r\n        <mat-drawer mode=\"side\" [opened]=\"isOpen\">\r\n            <app-side-nav></app-side-nav>\r\n        </mat-drawer>\r\n        \r\n        <mat-drawer-content>\r\n            <app-header (toggleSideBar)=\"toggleit()\"></app-header>\r\n            <router-outlet></router-outlet>\r\n           \r\n            \r\n        </mat-drawer-content>\r\n    </mat-drawer-container>\r\n    -->\r\n    \r\n    \r\n\r\n\r\n\r\n \r\n","import { BreakpointObserver } from '@angular/cdk/layout';\nimport { Component, AfterViewInit,  ViewChild, OnInit, OnDestroy } from '@angular/core';\nimport { MediaObserver, MediaChange } from '@angular/flex-layout';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Subscription } from 'rxjs';\nimport { DashboardServiceService } from '../services/dashboard-service.service';\n\n@Component({\n\tselector: 'app-dashboard',\n\ttemplateUrl: './dashboard.component.html',\n\tstyleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit,OnDestroy {\n\tdata:any\nisOpen=true\n\n \n mediasub!:Subscription\n devicexs:any\n\n\n\tconstructor(private dashser:DashboardServiceService,private mediaObserver:MediaObserver) {\n\t\t\n\t}\n\tngOnInit(): void {\n\t\tthis.mediasub=this.mediaObserver.media$.subscribe((result:MediaChange)=>{\n\t\t\tconsole.log(result.mqAlias)\n\t\t\tthis.devicexs=result.mqAlias==='xs'?true:false\n\n\t  \n\t\t  })\n\t\t\t}\n\n\t\n\t \n\t\t\tngOnDestroy(): void {\n\t\t\t\tthis.mediasub.unsubscribe()\n\t\t\t  }\n\t\t\t  toggleit(){\n\t\t\t\tthis.isOpen=!this.isOpen\n\t\t\n\t\t\t}\n\t  \n\t}\n\t\n\t\n\t\n\t\t\n\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { CategoryComponent } from '../material-component/dialog/category/category.component';\nimport { CategoryserviceService } from '../services/categoryservice.service';\nimport { OpensnackbarService } from '../services/opensnackbar.service';\n\n@Component({\n  selector: 'app-manage-category',\n  templateUrl: './manage-category.component.html',\n  styleUrls: ['./manage-category.component.scss']\n})\nexport class ManageCategoryComponent implements OnInit {\ndisplayedColumns:string[]=['name','edit']\nresponseMessage:any\ndataSource:any\n  constructor(private catser:CategoryserviceService,private dialog:MatDialog,\n    private router:Router,private snackbar:OpensnackbarService) { }\n\n  ngOnInit(): void {\n    this.getTableData()\n  }\n  getTableData(){\n    this.catser.getCategories().subscribe((res:any)=>{\n      this.dataSource=new MatTableDataSource(res)\n    })\n  }\n  applyFilter(event:Event){\n    let filteredVal=(event.target as HTMLInputElement).value\n    this.dataSource.filter=filteredVal.trim().toLocaleLowerCase()\n  }\n\n  \n  handleAddAction(){\n    let dialogconfig=new MatDialogConfig()\n    dialogconfig.data={\n      action:\"Add\"\n    }\n    dialogconfig.width=\"850px\"\n    let dialogref=this.dialog.open(CategoryComponent,dialogconfig)\n    this.router.events.subscribe((res:any)=>{\n      dialogref.close()\n\n    })\n    let sub=dialogref.componentInstance.onAddEmiter.subscribe((res:any)=>{\n      this.getTableData()\n    })\n\n\n  }\n  handleEditAction(values:any){\n    let dialogconfig=new MatDialogConfig()\n    dialogconfig.data={\n\n      action:\"Edit\",\n      data:values\n    }\n    dialogconfig.width=\"850px\"\n    let dialogref=this.dialog.open(CategoryComponent,dialogconfig)\n    this.router.events.subscribe((res:any)=>{\n      dialogref.close()\n\n    })\n    let sub=dialogref.componentInstance.onEditEmiter.subscribe((res:any)=>{\n      this.getTableData()\n    })\n\n  }\n\n\n\n}\n","<mat-card>\n    <b><span>Manage Categories</span></b>\n    <button mat-flat-button color=\"primary\"  (click)=\"handleAddAction()\" class=\"float-right\">Add Category</button>\n</mat-card>\n<hr>\n<mat-card>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Filter</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\">\n\n    </mat-form-field>\n</mat-card>\n<hr>\n<div>\n    <table mat-table class=\"mat-elevation-z8\"  [dataSource]=\"dataSource\">\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Name</th>\n            <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef>Action</th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-icon-button color=\"primary\" (click)=\"handleEditAction(element)\" matTooltip=\"Edit\">\n                    <mat-icon>edit</mat-icon>\n                </button>\n            </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns:displayedColumns\"></tr>\n\n\n    </table>\n\n</div>\n","import { MediaMatcher } from '@angular/cdk/layout';\nimport { ChangeDetectorRef, Component, OnDestroy, AfterViewInit } from '@angular/core';\n\n\n/** @title Responsive sidenav */\n@Component({\n  selector: 'app-full-layout',\n  templateUrl: 'full.component.html',\n  styleUrls: []\n})\nexport class FullComponent implements OnDestroy, AfterViewInit {\n  mobileQuery: MediaQueryList;\n\n  private _mobileQueryListener: () => void;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher\n  ) {\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n  ngAfterViewInit() { }\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Frontend';\r\n}\r\n","<router-outlet></router-outlet>","import { Component, EventEmitter, OnInit } from '@angular/core';\nimport { Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirmation',\n  templateUrl: './confirmation.component.html',\n  styleUrls: ['./confirmation.component.scss']\n})\nexport class ConfirmationComponent implements OnInit {\n  details:any={}\n  onEmmitStatus=new EventEmitter()\n\n  constructor(@Inject(MAT_DIALOG_DATA) public dialogData:any) { }\n\n  ngOnInit(): void {\n    if(this.dialogData){\n      this.details=this.dialogData\n    }\n  }\n  handleAction(){\n    this.onEmmitStatus.emit()\n  }\n\n}\n","<mat-dialog-content class=\"typography\">\n    <h5> Are you sure you want to {{details.message}} ?</h5>\n\n</mat-dialog-content>\n<mat-dialog-actions>\n    <button mat-raised-button color=\"primary\" (click)=\"handleAction()\">Yes</button>\n    <button mat-raised-button mat-dialog-close >No</button>\n\n</mat-dialog-actions>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\n\n  constructor(private http:HttpClient,private router:Router) { }\n  public isAuthenticated():boolean{\n    const token=localStorage.getItem('token')\n    if(!token){\n      this.router.navigate(['/'])\n      return false;\n    }\n    else{\n      return true\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpHeaders\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { globalVariables } from '../shared/global-variable';\nimport { OpensnackbarService } from './opensnackbar.service';\n\n\n@Injectable()\nexport class HandleReqInterceptor implements HttpInterceptor {\n  responseMessage:any\n\n  constructor(private snackbarser:OpensnackbarService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let req=request.clone({\n      headers:new HttpHeaders().append('Content-Type','application/json')\n    })\n    return next.handle(req).pipe(tap(     //tap here display the data and change nothing it is just manipulating it\n      (event:any)=>{\n\n      },\n      (error:any)=>{\n        if(error.error?.message){\n          this.responseMessage=error.error?.message\n        }\n        else{\n          this.responseMessage=globalVariables.genericError\n          \n        }\n        this.snackbarser.openSnackBar(this.responseMessage,globalVariables.error)\n\n\n      }\n    )\n    )\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { OpensnackbarService } from '../services/opensnackbar.service';\nimport { UserService } from '../services/user.service';\nimport { globalVariables } from '../shared/global-variable';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  forgotPasswordForm!:FormGroup\n  resposeMessage!:any\n\n  constructor(private fb:FormBuilder,private snackbar:OpensnackbarService,\n    private user:UserService,private dialog:MatDialogRef<ForgotPasswordComponent>) { }\n\n  ngOnInit(): void {\n    this.forgotPasswordForm=this.fb.group({\n      email:[null,[Validators.required,Validators.pattern(globalVariables.emailRegex)]]\n    })\n\n  }\n\n\n  handleSubmit(){\n    var formData=this.forgotPasswordForm.value;\n    var data=\n    {\n      email:formData.email \n    }\n    this.user.forgotPassword(data).subscribe((response:any)=>{\n      this.resposeMessage=response?.message\n      this.dialog.close()\n      this.snackbar.openSnackBar(this.resposeMessage,'')\n\n    })\n\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row fxLayout=\"row\">\n        <span class=\"title-center\">Forgot Password?!</span>\n\n\n    </mat-toolbar-row>\n</mat-toolbar>\n<mat-dialog-content class=\"typograghy\">\n    <form [formGroup]=\"forgotPasswordForm\">\n        <mat-form-field appearance=\"fill\" fxFlex>\n            <mat-label>Email</mat-label>\n            <input matInput formControlName=\"email\" required>\n            <mat-error *ngIf=\"forgotPasswordForm.controls.email.touched && forgotPasswordForm.controls.email.invalid \">\n                <span *ngIf=\"forgotPasswordForm.controls.email.errors?.required\">This field is required.</span>\n                <span *ngIf=\"forgotPasswordForm.controls.email.errors?.pattern\">This field is invalid.</span>\n\n            </mat-error>\n\n        </mat-form-field>\n\n    </form>\n\n\n\n</mat-dialog-content>\n<mat-dialog-actions align=\"center\">\n    <button mat-raised-button color=\"primary\" (click)=\"handleSubmit()\" [disabled]=\"forgotPasswordForm.invalid\">Submit</button>\n    <button mat-raised-button color=\"primary\"  mat-dialog-close>Close</button>\n\n</mat-dialog-actions>\n\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './shared/material-module';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { BestSellerComponent } from './best-seller/best-seller.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { FullComponent } from './layouts/full/full.component';\r\nimport { AppSidebarComponent } from './layouts/full/sidebar/sidebar.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { LoaderInterceptorService } from './loader/loader-interceptor.service';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { HandleReqInterceptor } from './services/handle-req.interceptor';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { HeaderComponent } from './navigation/header/header.component';\r\nimport { FooterComponent } from './navigation/footer/footer.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthTokenInterceptor } from './services/auth-token.interceptor';\r\nimport { RouterGuardService } from './services/router-guard.service';\r\nimport { SideNavComponent } from './navigation/side-nav/side-nav.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { TryOneComponent } from './try-one/try-one.component';\r\nimport { CardsComponent } from './cards/cards.component';\r\nimport { ConfirmationComponent } from './material-component/dialog/confirmation/confirmation.component';\r\nimport { ChangePasswordComponent } from './material-component/dialog/change-password/change-password.component';\r\nimport { CategoryComponent } from './material-component/dialog/category/category.component';\r\nimport { ManageCategoryComponent } from './manage-category/manage-category.component';\r\nimport { ManageProductComponent } from './manage-product/manage-product.component';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { ManageOrderComponent } from './manage-order/manage-order.component';\r\nimport { ViewBillComponent } from './view-bill/view-bill.component';\r\nimport { ViewbillproductsComponent } from './viewbillproducts/viewbillproducts.component';\nimport { ManageUsersComponent } from './manage-users/manage-users.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\t\r\n    AppComponent,\r\n    HomeComponent,\r\n    BestSellerComponent,\r\n    FullComponent,\r\n    AppSidebarComponent,\r\n    SignupComponent,\r\n    ForgotPasswordComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    LoginComponent,\r\n    DashboardComponent,\r\n    SideNavComponent,\r\n    TryOneComponent,\r\n    CardsComponent,\r\n    ConfirmationComponent,\r\n    ChangePasswordComponent,\r\n    CategoryComponent,\r\n    ManageCategoryComponent,\r\n    ManageProductComponent,\r\n    ProductComponent,\r\n    ManageOrderComponent,\r\n    ViewBillComponent,\r\n    ViewbillproductsComponent,\r\n    ManageUsersComponent\r\n   ],\r\n\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    FlexLayoutModule,\r\n    SharedModule,\r\n    HttpClientModule,\r\n    LayoutModule,\r\n  ],\r\n  \r\n  providers: [\r\n\r\n    {provide:HTTP_INTERCEPTORS,useClass:LoaderInterceptorService,multi:true},\r\n    {provide:HTTP_INTERCEPTORS,useClass:HandleReqInterceptor,multi:true },\r\n    {provide:HTTP_INTERCEPTORS,useClass:AuthTokenInterceptor,multi:true},\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class AuthTokenInterceptor implements HttpInterceptor {\n\n  constructor(private router:Router) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\nconst token=localStorage.getItem('token')\n    if(token){\n      request=request.clone({\n        setHeaders:{Authorization:`Bearer ${token}`}\n      })\n    }\n    return next.handle(request).pipe(\n      catchError((err)=>{\n        if(err instanceof HttpErrorResponse){\n          console.log(err.url)\n          if(err.status == 401 || err.status === 403 ){\n            if(this.router.url==='/'){}\n            else{\n              localStorage.clear()\n              this.router.navigate(['/'])\n              console.log('out')\n            }\n          }\n        }\n        return throwError(err)\n      })\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderServiceService {\n  private isLoading:BehaviorSubject<boolean>=new BehaviorSubject<boolean>(false);\n  public readonly loading$=this.isLoading.asObservable()\n\n\n  constructor() { }\n  show(){\n    this.isLoading.next(true)\n  }\n  hide(){\n    this.isLoading.next(false)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\nimport jwt_decode from 'jwt-decode';\nimport { globalVariables } from '../shared/global-variable';\nimport { AuthServiceService } from './auth-service.service';\nimport { OpensnackbarService } from './opensnackbar.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouterGuardService {\n\n  constructor(private router: Router, private auth: AuthServiceService, private snackbar: OpensnackbarService) { }\n  canActivate(acroute: ActivatedRouteSnapshot): boolean {\n    let expectedRoleArray = acroute.data\n    expectedRoleArray = expectedRoleArray.expectedRole\n    const token: any = localStorage.getItem('token')\n    var tokenPayload: any\n    try {\n      tokenPayload = jwt_decode(token)\n\n    }\n    catch (err) {\n      localStorage.clear()\n      this.router.navigate(['/'])\n    }\n    let checkRole = false\n    for (let i = 0; i < expectedRoleArray.length; i++) {\n      if (expectedRoleArray[i] == tokenPayload.role) {\n        checkRole = true\n\n      }\n    }\n    if (tokenPayload.role == 'user' || tokenPayload.role == 'admin') {\n      if (checkRole) {\n        localStorage.setItem('role', tokenPayload.role)\n\n        return true\n\n      }\n      this.snackbar.openSnackBar(globalVariables.unauthorized, globalVariables.error)\n      this.router.navigate(['/cafe/dashboard'])\n      return false\n\n\n    }\n    else {\n      \n      this.router.navigate(['/'])\n\n      localStorage.clear()\n      return false\n    }\n\n\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { OpensnackbarService } from '../services/opensnackbar.service';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-manage-users',\n  templateUrl: './manage-users.component.html',\n  styleUrls: ['./manage-users.component.scss']\n})\nexport class ManageUsersComponent implements OnInit {\ndataSource:any\ndisplayedColumns:any[]=['name','contactNumber','email','status']\nresponseMessage:any\n  constructor(private userser:UserService,private snackbar:OpensnackbarService) { }\n\n  ngOnInit(): void {\n    this.tableData()\n  }\n  tableData(){\n    this.userser.getUsers().subscribe((res:any)=>{\n      this.dataSource=new MatTableDataSource(res)\n      \n\n    })\n\n  }\n  applyFilter(event:Event){\n    var filteredValue=(event.target as HTMLInputElement).value\n    this.dataSource.filter=filteredValue.trim().toLocaleLowerCase()\n  }\n  onChange(status: any, id: any) {\n    var data = {\n      status: status.toString(),\n      id: id\n    }\n    this.userser.updateUser(data).subscribe((res: any) => {\n      this.responseMessage = res?.message\n      this.snackbar.openSnackBar(this.responseMessage, 'success')\n    })\n\n  }\n\n}\n","<mat-card>\n    <b> <span> Manage Users</span> </b> \n      \n</mat-card>\n<hr>\n<mat-card>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Filter\n  </mat-label>\n      <input matInput (keyup)=\"applyFilter($event)\">\n \n\n</mat-form-field>\n\n</mat-card>\n<hr>\n<div class=\"responsive-table\"> \n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n\n  </ng-container>\n  <ng-container matColumnDef=\"contactNumber\">\n      <th mat-header-cell *matHeaderCellDef>contactNumber</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.contactNumber}}</td>\n\n  </ng-container>\n  <ng-container matColumnDef=\"email\">\n      <th mat-header-cell *matHeaderCellDef>Email</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.email}}</td>\n\n  </ng-container>\n \n  <ng-container matColumnDef=\"status\">\n      <th mat-header-cell *matHeaderCellDef class=\"action-lonk\">Action</th>\n      <td mat-cell *matCellDef=\"let element\">\n         \n         \n          <mat-slide-toggle (change)=\"onChange($event.checked,element.id)\" [checked]=\"element.status\" matTooltip=\"Activate or Deactivate User\">\n\n          </mat-slide-toggle>\n      </td>\n\n  </ng-container>\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns:displayedColumns\"></tr>\n</table>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-try-one',\n  templateUrl: './try-one.component.html',\n  styleUrls: ['./try-one.component.scss']\n})\nexport class TryOneComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>try-one works!</p>\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OpensnackbarService {\n\n  constructor(private snackbar: MatSnackBar) { }\n  openSnackBar(message: string, action: string) {\n    if (action === 'error') {\n      this.snackbar.open(message, action, {\n        horizontalPosition: 'center',\n        verticalPosition: 'top',\n        panelClass: ['black-snackbar'],\n        duration: 2000\n\n      })\n    }\n    else {\n      this.snackbar.open(message, '', {\n        horizontalPosition: 'center',\n        verticalPosition: 'top',\n        panelClass: ['green-snackbar'],\n        duration: 2000\n\n      })\n\n    }\n  }\n}\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n import { NgModule } from '@angular/core';\r\n import { MatAutocompleteModule } from '@angular/material/autocomplete';\r\n import { MatButtonModule } from '@angular/material/button';\r\n import { MatButtonToggleModule } from '@angular/material/button-toggle';\r\n import { MatCardModule } from '@angular/material/card';\r\n import { MatCheckboxModule } from '@angular/material/checkbox';\r\n import { MatChipsModule } from '@angular/material/chips';\r\n import { MatDatepickerModule } from '@angular/material/datepicker';\r\n import { MatDialogModule } from '@angular/material/dialog';\r\n import { MatExpansionModule } from '@angular/material/expansion';\r\n import { MatFormFieldModule } from '@angular/material/form-field';\r\n import { MatGridListModule } from '@angular/material/grid-list';\r\n import { MatIconModule } from '@angular/material/icon';\r\n import { MatInputModule } from '@angular/material/input';\r\n import { MatListModule } from '@angular/material/list';\r\n import { MatMenu, MatMenuItem, MatMenuModule, MatMenuTrigger } from '@angular/material/menu';\r\n import { MatPaginatorModule } from '@angular/material/paginator';\r\n import { MatProgressBarModule } from '@angular/material/progress-bar';\r\n import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n import { MatRadioModule } from '@angular/material/radio';\r\n import { MatSelectModule } from '@angular/material/select';\r\n import { MatSidenavModule } from '@angular/material/sidenav';\r\n import { MatSliderModule } from '@angular/material/slider';\r\n import { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\n import { MatSnackBarModule } from '@angular/material/snack-bar';\r\n import { MatSortModule } from '@angular/material/sort';\r\n import { MatTableModule } from '@angular/material/table';\r\n import { MatTabsModule } from '@angular/material/tabs';\r\n import { MatToolbarModule } from '@angular/material/toolbar';\r\n import { MatTooltipModule } from '@angular/material/tooltip';\r\n import { MatStepperModule } from '@angular/material/stepper';\r\n import { MatBadgeModule } from '@angular/material/badge';\r\n import { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\n import { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\n \r\n import { CdkTableModule } from '@angular/cdk/table';\r\n import { CdkAccordionModule } from '@angular/cdk/accordion';\r\n import { A11yModule } from '@angular/cdk/a11y';\r\n import { BidiModule } from '@angular/cdk/bidi';\r\n import { OverlayModule } from '@angular/cdk/overlay';\r\n import { PlatformModule } from '@angular/cdk/platform';\r\n import { ObserversModule } from '@angular/cdk/observers';\r\n import { PortalModule } from '@angular/cdk/portal';\r\n \r\n /**\r\n  * NgModule that includes all Material modules that are required to serve the demo-app.\r\n  */\r\n @NgModule({\r\n     exports: [\r\n         MatAutocompleteModule,\r\n         MatButtonModule,\r\n         MatBottomSheetModule,\r\n         MatButtonToggleModule,\r\n         MatCardModule,\r\n         MatCheckboxModule,\r\n         MatChipsModule,\r\n         MatTableModule,\r\n         MatDatepickerModule,\r\n         MatDialogModule,\r\n         MatExpansionModule,\r\n         MatFormFieldModule,\r\n         MatGridListModule,\r\n         MatIconModule,\r\n         MatInputModule,\r\n         MatListModule,\r\n         MatMenuModule,\r\n         \r\n         MatPaginatorModule,\r\n         MatProgressBarModule,\r\n         MatProgressSpinnerModule,\r\n         MatRadioModule,\r\n         MatRippleModule,\r\n         MatSelectModule,\r\n         MatBadgeModule,\r\n         MatSidenavModule,\r\n         MatSlideToggleModule,\r\n         MatSliderModule,\r\n         MatSnackBarModule,\r\n         MatSortModule,\r\n         MatStepperModule,\r\n         MatTabsModule,\r\n         MatToolbarModule,\r\n         MatTooltipModule,\r\n         MatNativeDateModule,\r\n         CdkTableModule,\r\n         A11yModule,\r\n         BidiModule,\r\n         CdkAccordionModule,\r\n         ObserversModule,\r\n         OverlayModule,\r\n         PlatformModule,\r\n         PortalModule\r\n     ]\r\n     \r\n })\r\n export class MaterialModule { }\r\n ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar style=\" justify-content: center;\" class=\"footer\">\n    <h2>All right reserved @Ahmed Elsherbeeny</h2>\n  \n    \n  </mat-toolbar>","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n \nurl=environment.apiUrl\n  constructor(private http:HttpClient) { }\n  signUp(data:any){\n    return this.http.post(this.url+\"/user/signup\",data)\n  }\n  forgotPassword(data:any){\n    return this.http.post(this.url+'/user/forgotPassword',data)\n  }\n  logIn(data:any) {\n    return this.http.post(this.url+'/user/login',data)\n\n\n  }\n  checkToken(){\n    return this.http.get(this.url+'/user/checkToken')\n  }\n  changePassword(data:any){\n    return this.http.post(this.url+'/user/changePassword',data)\n  }\n  getUsers(){\n   return this.http.get(this.url+'/user/get')\n  }\n  updateUser(data:any){\n    return this.http.patch(this.url+'/user/update',data)\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { OpensnackbarService } from '../services/opensnackbar.service';\nimport { UserService } from '../services/user.service';\nimport { globalVariables } from '../shared/global-variable';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  signupForm!:FormGroup\n  responseMessage!:string\n\n  constructor(private fb:FormBuilder,private userservise:UserService,\n    private dialogref:MatDialogRef<SignupComponent>,private snackbarser:OpensnackbarService,private router:Router) { }\n  \n\n  ngOnInit(): void {\n   this.signupForm= this.fb.group({\n     name:[null,[Validators.required,Validators.pattern(globalVariables.nameRegex)]],\n     email:[null,[Validators.required,Validators.pattern(globalVariables.emailRegex)]],\n     contactNumber:[null,[Validators.required,Validators.pattern(globalVariables.contactNumberRegex)]],\n     password:[null,[Validators.required]]\n\n    })\n  }\n  handleSubmit(){\n    var formData=this.signupForm.value;\n    var data=\n    {\n      name:formData.name,\n      email:formData.email,\n      contactNumber:formData.contactNumber,\n      password:formData.password\n    }\n    this.userservise.signUp(data).subscribe((response:any)=>{\n      console.log(response)\n      this.dialogref.close()\n      this.responseMessage=response?.message\n      this.snackbarser.openSnackBar(this.responseMessage,'');\n      this.router.navigate(['/'])\n\n\n    })\n  }\n  \n\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row fxLayout=\"row\">\n        <span class=\"title-center\">Sign Up</span>\n\n\n    </mat-toolbar-row>\n</mat-toolbar>\n<mat-dialog-content class=\"typograghy\">\n    <form [formGroup]=\"signupForm\">\n        <div fxFlex fxLayout=\"column\">\n            <mat-form-field appearance=\"fill\" fxFlex>\n                <mat-label>Name</mat-label>\n                <input matInput formControlName=\"name\" required>\n                <mat-error *ngIf=\"signupForm.controls.name.touched && signupForm.controls.name.invalid \">\n                    <span *ngIf=\"signupForm.controls.name.errors?.required\">This field is required.</span>\n                    <span *ngIf=\"signupForm.controls.name.errors?.pattern\">This field is invalid</span>\n\n                </mat-error>\n\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\" fxFlex>\n                <mat-label>Email</mat-label>\n                <input matInput formControlName=\"email\" required>\n                <mat-error *ngIf=\"signupForm.controls.email.touched && signupForm.controls.email.invalid \">\n                    <span *ngIf=\"signupForm.controls.email.errors?.required\">This field is required.</span>\n                    <span *ngIf=\"signupForm.controls.email.errors?.pattern\">This field is invalid.</span>\n\n                </mat-error>\n\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\" fxFlex>\n                <mat-label>ContactNumber</mat-label>\n                <input matInput formControlName=\"contactNumber\" required>\n                <mat-error *ngIf=\"signupForm.controls.contactNumber.touched && signupForm.controls.contactNumber.invalid \">\n                    <span *ngIf=\"signupForm.controls.contactNumber.errors?.required\">This field is required.</span>\n                    <span *ngIf=\"signupForm.controls.contactNumber.errors?.pattern\">This field is invalid</span>\n\n                </mat-error>\n\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\" fxFlex>\n                <mat-label>Password</mat-label>\n                <input matInput type=\"password\" formControlName=\"password\" required>\n                <mat-error *ngIf=\"signupForm.controls.password.touched && signupForm.controls.password.invalid \">\n                    <span *ngIf=\"signupForm.controls.password.errors?.required\">This field is required.</span>\n                    <span *ngIf=\"signupForm.controls.password.errors?.pattern\">This field is invalid</span>\n\n                </mat-error>\n\n            </mat-form-field>\n            \n\n        </div>\n        \n    </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"center\">\n    <button mat-raised-button color=\"primary\" (click)=\"handleSubmit()\" [disabled]=\"signupForm.invalid\">Submit</button>\n    <button mat-raised-button color=\"primary\"  mat-dialog-close>Close</button>\n\n</mat-dialog-actions>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardServiceService {\n url=environment.apiUrl\n  constructor(private http:HttpClient) { }\n  getDetails(){\n    return this.http.get(this.url+'/dashboard/details')\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { MediaChange, MediaObserver } from '@angular/flex-layout';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ForgotPasswordComponent } from 'src/app/forgot-password/forgot-password.component';\nimport { LoaderServiceService } from 'src/app/loader/loader-service.service';\nimport { LoginComponent } from 'src/app/login/login.component';\nimport { ChangePasswordComponent } from 'src/app/material-component/dialog/change-password/change-password.component';\nimport { ConfirmationComponent } from 'src/app/material-component/dialog/confirmation/confirmation.component';\nimport { OpenDialogService } from 'src/app/services/open-dialog.service';\nimport { SignupComponent } from 'src/app/signup/signup.component';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  mediasub!:Subscription\n  devicexs!:boolean\n  @Output() toggleSideBar:EventEmitter<any>=new EventEmitter()\n\n\n  constructor(private dialogser:OpenDialogService,public loader:LoaderServiceService,\n    private http:HttpClient,private mediaObserver:MediaObserver,public router:Router,private dialog:MatDialog) { }\n    loading$=this.loader.loading$\n\n\n  ngOnInit(): void {\n    this.mediasub=this.mediaObserver.media$.subscribe((result:MediaChange)=>{\n      console.log(result.mqAlias)\n      this.devicexs=result.mqAlias==='xs'?true:false\n\n\n    })\n    \n  }\n  ngOnDestroy(): void {\n    this.mediasub.unsubscribe()\n  }\n  toggle(){\n    this.toggleSideBar.emit()\n  }\n  signupAction(){\n    this.dialogser.openComponent('550px',SignupComponent)\n  }\n  forgotPasswordAction(){\n    this.dialogser.openComponent('550px',ForgotPasswordComponent)\n\n\n  }\n  logIn(){\n    this.dialogser.openComponent('550px',LoginComponent)\n\n\n  }\n  changepass(){\n    this.dialogser.openComponent('550px',ChangePasswordComponent)\n\n  }\n  logOut(){\n    const dialogconfig=new MatDialogConfig()\n    dialogconfig.data={\n      message:'log out'\n    }\n    const dialogref=this.dialog.open(ConfirmationComponent,dialogconfig)\n    dialogref.componentInstance.onEmmitStatus.subscribe((user:any)=>{\n      dialogref.close()\n      localStorage.clear()\n      this.router.navigate(['/'])\n    })\n\n  }\n\n}\n","<div class=\"loader-container\" *ngIf=\"loading$ | async \">\n    <mat-spinner style=\"top: 50%; left: 50%;\"></mat-spinner>\n \n\n\n\n</div>\n<mat-toolbar class=\"header\">\n<mat-toolbar-row fxLayoutAlign=\"space-between center\" >\n   \n<div >\n    <button mat-icon-button   value=\"sidebarclosed\" (click)=\"toggle()\" style=\"vertical-align: bottom;\" *ngIf=\"router.url !== '/' && devicexs \">\n        <mat-icon>menu</mat-icon>\n    </button>\n    <a href=\"#\" class=\"logo\" >\n        <mat-icon>storefront</mat-icon> Cafe Management System\n      </a>\n\n</div>\n<div *ngIf=\"!devicexs\" fxLayout=\"row\" fxLayoutGap=\"20px\">\n    <a (click)=\"signupAction()\" class=\"navlink\" *ngIf=\"router.url== '/'\">Sign Up</a>\n    <a (click)=\"logIn()\" class=\"navlink\" *ngIf=\"router.url== '/'\">Log In</a>\n    \n\n\n</div>\n<mat-menu #appmenu=\"matMenu\">\n    <button mat-menu-item (click)=\"changepass()\">\n       <mat-icon>password</mat-icon> Change Password\n\n    </button>\n    <button mat-menu-item (click)=\"logOut()\">\n      <mat-icon>exit_to_app</mat-icon>  Log Out\n        \n    </button>\n    \n\n</mat-menu>\n<button mat-flat-button [matMenuTriggerFor]=\"appmenu\" *ngIf=\"router.url!== '/'\"><mat-icon>account_circle</mat-icon></button>\n</mat-toolbar-row>\n<mat-toolbar-row *ngIf=\"devicexs\" fxLayoutAlign=\"space-between end\">\n    <a (click)=\"signupAction()\" class=\"navlink\" *ngIf=\"router.url== '/'\">Sign Up</a>\n    <a (click)=\"forgotPasswordAction()\" class=\"navlink\" *ngIf=\"router.url== '/'\">forgot Password?!</a>\n    <a (click)=\"logIn()\" class=\"navlink\" *ngIf=\"router.url== '/'\">Log In</a>\n\n    \n</mat-toolbar-row>\n</mat-toolbar>\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CardsComponent } from './cards/cards.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ManageCategoryComponent } from './manage-category/manage-category.component';\r\nimport { ManageOrderComponent } from './manage-order/manage-order.component';\r\nimport { ManageProductComponent } from './manage-product/manage-product.component';\r\nimport { ManageUsersComponent } from './manage-users/manage-users.component';\r\nimport { RouterGuardService } from './services/router-guard.service';\r\nimport { ViewBillComponent } from './view-bill/view-bill.component';\r\n\r\nconst routes: Routes = [{path: '', component: HomeComponent},\r\n\r\n  {path: 'cafe/dashboard', component: DashboardComponent,\r\n  children: [{\r\n    path: '', redirectTo: '/cafe/dashboard/cards', pathMatch: 'full'\r\n  },{\r\n    path: 'cards', component: CardsComponent, canActivate: [RouterGuardService],\r\n    data: {\r\n      expectedRole: ['admin', 'user']\r\n\r\n    }\r\n  }\r\n  ,\r\n  {\r\n    path: 'category', component: ManageCategoryComponent, canActivate: [RouterGuardService],\r\n    data: {\r\n      expectedRole: ['admin']\r\n\r\n    }\r\n  },\r\n  {\r\n    path: 'product', component: ManageProductComponent, canActivate: [RouterGuardService],\r\n    data: {\r\n      expectedRole: ['admin']\r\n\r\n    }\r\n  },\r\n  {\r\n    path: 'order', component: ManageOrderComponent, canActivate: [RouterGuardService],\r\n    data: {\r\n      expectedRole: ['admin','user']\r\n\r\n    }\r\n  },\r\n  {\r\n    path: 'bill', component: ViewBillComponent, canActivate: [RouterGuardService],\r\n    data: {\r\n      expectedRole: ['admin']\r\n\r\n    }\r\n  },\r\n  {\r\n    path: 'users', component: ManageUsersComponent, canActivate: [RouterGuardService],\r\n    data: {\r\n      expectedRole: ['admin']\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n]\r\n  },\r\n  { path: '**',redirectTo:'', component: HomeComponent }\r\n\r\n]\r\n\r\n\r\n\r\n  \r\n   \r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n{\r\n  path: 'cafe',\r\n  component: FullComponent,\r\n  children: [\r\n    {\r\n      path: '',\r\n      redirectTo: '/cafe/dashboard',\r\n      pathMatch: 'full',\r\n    },\r\n    {\r\n      path: '',\r\n      loadChildren:\r\n        () => import('./material-component/material.module').then(m => m.MaterialComponentsModule),\r\n        canActivate:[RouterGuardService],\r\n        data:{\r\n          expectedRole:['admin','user']\r\n        }\r\n    },\r\n    {\r\n      path: 'dashboard',\r\n      loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule),\r\n      canActivate:[RouterGuardService],\r\n        data:{\r\n          expectedRole:['admin','user']\r\n        }\r\n    }\r\n  ]\r\n},\r\n{ path: '**',redirectTo:'', component: HomeComponent }\r\n*/\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { OpensnackbarService } from '../services/opensnackbar.service';\nimport { UserService } from '../services/user.service';\nimport { globalVariables } from '../shared/global-variable';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\nlogInForm!:FormGroup\nresponseMessage!:any\n  constructor(private fb:FormBuilder,private snackbar:OpensnackbarService,\n    private user:UserService,private dialog:MatDialogRef<LoginComponent>,private router:Router) { }\n\n    ngOnInit(): void {\n      this.logInForm=this.fb.group({\n        email:[null,[Validators.required,Validators.pattern(globalVariables.emailRegex)]],\n        password:[null,[Validators.required]]\n\n\n      })\n  \n    }\n    handleSubmit(){\n      var formData=this.logInForm.value;\n      var data=\n      {\n        email:formData.email,\n        password:formData.password \n      }\n      this.user.logIn(data).subscribe((response:any)=>{\n        this.dialog.close()\n        localStorage.setItem('token',response.token)\n\n        this.router.navigate(['/cafe/dashboard'])\n\n  \n      })\n  \n    }\n\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row fxLayout=\"row\">\n        <span class=\"title-center\">Log In</span>\n\n\n    </mat-toolbar-row>\n</mat-toolbar>\n<mat-dialog-content class=\"typograghy\">\n    <form [formGroup]=\"logInForm\">\n        <div fxFlex fxLayout=\"column\">\n           \n            <mat-form-field appearance=\"fill\" fxFlex>\n                <mat-label>Email</mat-label>\n                <input matInput formControlName=\"email\" required>\n                <mat-error *ngIf=\"logInForm.controls.email.touched && logInForm.controls.email.invalid \">\n                    <span *ngIf=\"logInForm.controls.email.errors?.required\">This field is required.</span>\n                    <span *ngIf=\"logInForm.controls.email.errors?.pattern\">This field is invalid.</span>\n\n                </mat-error>\n\n            </mat-form-field>\n            \n            <mat-form-field appearance=\"fill\" fxFlex>\n                <mat-label>Password</mat-label>\n                <input matInput type=\"password\" formControlName=\"password\" required>\n                <mat-error *ngIf=\"logInForm.controls.password.touched && logInForm.controls.password.invalid \">\n                    <span *ngIf=\"logInForm.controls.password.errors?.required\">This field is required.</span>\n                    <span *ngIf=\"logInForm.controls.password.errors?.pattern\">This field is invalid</span>\n\n                </mat-error>\n\n            </mat-form-field>\n            \n\n        </div>\n        \n    </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"center\">\n    <button mat-raised-button color=\"primary\" (click)=\"handleSubmit()\" [disabled]=\"logInForm.invalid\">Submit</button>\n    <button mat-raised-button color=\"primary\"  mat-dialog-close>Close</button>\n\n</mat-dialog-actions>\n","import { Directive, HostListener, Inject } from '@angular/core';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionToggle]'\r\n})\r\nexport class AccordionAnchorDirective {\r\n  protected navlink: AccordionLinkDirective;\r\n\r\n  constructor(@Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\r\n    this.navlink = navlink;\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(e: any) {\r\n    this.navlink.toggle();\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}